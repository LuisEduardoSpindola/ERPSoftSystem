// <auto-generated />
using System;
using ERPSoft.DATA.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ERPSoft.DATA.Migrations
{
    [DbContext(typeof(ERPSoftDbContext))]
    [Migration("20231028180132_FornecedorRetried")]
    partial class FornecedorRetried
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ERPSoft.DATA.Models.Entrada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("date");

                    b.Property<string>("DataFormatada")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("EntradaQtda")
                        .HasColumnType("int")
                        .HasColumnName("EntradaQTDA");

                    b.Property<int>("IdEntradaFornecedor")
                        .HasColumnType("int");

                    b.Property<int>("IdEntradaProduto")
                        .HasColumnType("int");

                    b.Property<string>("NomeDeposito")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("NomeFornecedor")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("NomeProduto")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int>("NotaFiscal")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Entrada__3214EC077C240871");

                    b.HasIndex("IdEntradaFornecedor");

                    b.HasIndex("IdEntradaProduto");

                    b.ToTable("Entrada");
                });

            modelBuilder.Entity("ERPSoft.DATA.Models.Fornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Cep")
                        .HasColumnType("int")
                        .HasColumnName("CEP");

                    b.Property<int>("Cnpj")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("InscEstadual")
                        .HasColumnType("int");

                    b.Property<int>("InscMunicipal")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("OrdemVinc")
                        .HasColumnType("bit");

                    b.HasKey("Id")
                        .HasName("PK__Forneced__3214EC07D1971CAE");

                    b.ToTable("Fornecedor");
                });

            modelBuilder.Entity("ERPSoft.DATA.Models.OrdemCompra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CodPedidoMaterial")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("date")
                        .IsFixedLength();

                    b.Property<string>("DataFormatada")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<int>("IdOrdemFornecedor")
                        .HasColumnType("int");

                    b.Property<int>("IdOrdemPedidoMaterial")
                        .HasColumnType("int");

                    b.Property<string>("NomeFornecedor")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Ordem")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<int>("Qtda")
                        .HasColumnType("int")
                        .HasColumnName("QTDA");

                    b.Property<string>("StatusOc")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("StatusOC");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("Valor")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__OrdemCom__3214EC0742F00992");

                    b.HasIndex("IdOrdemFornecedor");

                    b.HasIndex("IdOrdemPedidoMaterial");

                    b.ToTable("OrdemCompra");
                });

            modelBuilder.Entity("ERPSoft.DATA.Models.OrdemServico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Cod")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("date");

                    b.Property<string>("DataFormatada")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<int>("IdOrdemFornecedor")
                        .HasColumnType("int");

                    b.Property<int>("IdOrdemPedidoServico")
                        .HasColumnType("int");

                    b.Property<string>("NomeFornecedor")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("NomeServico")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int?>("Ordem")
                        .HasColumnType("int");

                    b.Property<int?>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__OrdemSer__3214EC0747752C80");

                    b.HasIndex("IdOrdemFornecedor");

                    b.HasIndex("IdOrdemPedidoServico");

                    b.ToTable("OrdemServico");
                });

            modelBuilder.Entity("ERPSoft.DATA.Models.PedidoMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cod")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("date");

                    b.Property<string>("DataFormatada")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("Departamento")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int>("Ean")
                        .HasColumnType("int")
                        .HasColumnName("EAN");

                    b.Property<string>("Fabricante")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int>("IdPedidoMproduto")
                        .HasColumnType("int")
                        .HasColumnName("IdPedidoMProduto");

                    b.Property<string>("NomeProduto")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int?>("Qtda")
                        .HasColumnType("int")
                        .HasColumnName("QTDA");

                    b.Property<string>("RelacionadoOrdemCompra")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("StatusMaterial")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Unidade")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Usuario")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id")
                        .HasName("PK__PedidoMa__3214EC0706E939CC");

                    b.HasIndex("IdPedidoMproduto");

                    b.ToTable("PedidoMaterial");
                });

            modelBuilder.Entity("ERPSoft.DATA.Models.PedidoServico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cod")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("date");

                    b.Property<string>("DataFormatada")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("Departamento")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int>("IdPedidoSfornecedor")
                        .HasColumnType("int")
                        .HasColumnName("IdPedidoSFornecedor");

                    b.Property<int>("IdPedidoSservico")
                        .HasColumnType("int")
                        .HasColumnName("IdPedidoSServico");

                    b.Property<string>("NomeFornecedor")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("NomeServico")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("StatusServico")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Usuario")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id")
                        .HasName("PK__PedidoSe__3214EC07FEF3200E");

                    b.HasIndex("IdPedidoSfornecedor");

                    b.HasIndex("IdPedidoSservico");

                    b.ToTable("PedidoServico");
                });

            modelBuilder.Entity("ERPSoft.DATA.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Ean")
                        .HasColumnType("int")
                        .HasColumnName("EAN");

                    b.Property<int?>("EstoqueAtual")
                        .HasColumnType("int");

                    b.Property<int?>("EstoqueIdeal")
                        .HasColumnType("int");

                    b.Property<int?>("EstoqueMin")
                        .HasColumnType("int");

                    b.Property<string>("Foto")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Preco")
                        .HasColumnType("int");

                    b.Property<int?>("PrecoTotal")
                        .HasColumnType("int");

                    b.Property<string>("Unidade")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Produto__3214EC079A512A4B");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("ERPSoft.DATA.Models.Saida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("date");

                    b.Property<string>("DataFormatada")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Departamento")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int>("EstoqueQtde")
                        .HasColumnType("int")
                        .HasColumnName("EstoqueQTDE");

                    b.Property<int>("EstoqueSaida")
                        .HasColumnType("int");

                    b.Property<int>("IdSaidaFornecedor")
                        .HasColumnType("int");

                    b.Property<int>("IdSaidaProduto")
                        .HasColumnType("int");

                    b.Property<string>("NomeFornecedor")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("NomeProduto")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Usuario")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id")
                        .HasName("PK__Saida__3214EC07D83BF2CE");

                    b.HasIndex("IdSaidaFornecedor");

                    b.HasIndex("IdSaidaProduto");

                    b.ToTable("Saida");
                });

            modelBuilder.Entity("ERPSoft.DATA.Models.Servicos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdFornecedor")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("NomeFornecedor")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id")
                        .HasName("PK__Servicos__3214EC078EB73E3B");

                    b.HasIndex("IdFornecedor");

                    b.ToTable("Servicos");
                });

            modelBuilder.Entity("ERPSoft.DATA.Models.Entrada", b =>
                {
                    b.HasOne("ERPSoft.DATA.Models.Fornecedor", "IdEntradaFornecedorNavigation")
                        .WithMany("Entrada")
                        .HasForeignKey("IdEntradaFornecedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FKEntradaFornecedor");

                    b.HasOne("ERPSoft.DATA.Models.Produto", "IdEntradaProdutoNavigation")
                        .WithMany("Entrada")
                        .HasForeignKey("IdEntradaProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FKEntradaProduto");

                    b.Navigation("IdEntradaFornecedorNavigation");

                    b.Navigation("IdEntradaProdutoNavigation");
                });

            modelBuilder.Entity("ERPSoft.DATA.Models.OrdemCompra", b =>
                {
                    b.HasOne("ERPSoft.DATA.Models.Fornecedor", "IdOrdemFornecedorNavigation")
                        .WithMany("OrdemCompra")
                        .HasForeignKey("IdOrdemFornecedor")
                        .IsRequired()
                        .HasConstraintName("FKOrdemCompraFornecedor");

                    b.HasOne("ERPSoft.DATA.Models.PedidoMaterial", "IdOrdemPedidoMaterialNavigation")
                        .WithMany("OrdemCompra")
                        .HasForeignKey("IdOrdemPedidoMaterial")
                        .IsRequired()
                        .HasConstraintName("FKOrdemPedidoMaterial");

                    b.Navigation("IdOrdemFornecedorNavigation");

                    b.Navigation("IdOrdemPedidoMaterialNavigation");
                });

            modelBuilder.Entity("ERPSoft.DATA.Models.OrdemServico", b =>
                {
                    b.HasOne("ERPSoft.DATA.Models.Fornecedor", "IdOrdemFornecedorNavigation")
                        .WithMany("OrdemServico")
                        .HasForeignKey("IdOrdemFornecedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FKOrdemPedidoFornecedor");

                    b.HasOne("ERPSoft.DATA.Models.Servicos", "IdOrdemPedidoServicoNavigation")
                        .WithMany("OrdemServico")
                        .HasForeignKey("IdOrdemPedidoServico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FKOrdemPedidoServico");

                    b.Navigation("IdOrdemFornecedorNavigation");

                    b.Navigation("IdOrdemPedidoServicoNavigation");
                });

            modelBuilder.Entity("ERPSoft.DATA.Models.PedidoMaterial", b =>
                {
                    b.HasOne("ERPSoft.DATA.Models.Produto", "IdPedidoMprodutoNavigation")
                        .WithMany("PedidoMaterial")
                        .HasForeignKey("IdPedidoMproduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FKPedidoMProduto");

                    b.Navigation("IdPedidoMprodutoNavigation");
                });

            modelBuilder.Entity("ERPSoft.DATA.Models.PedidoServico", b =>
                {
                    b.HasOne("ERPSoft.DATA.Models.Fornecedor", "IdPedidoSfornecedorNavigation")
                        .WithMany("PedidoServico")
                        .HasForeignKey("IdPedidoSfornecedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FKPedidoSfornecedor");

                    b.HasOne("ERPSoft.DATA.Models.Servicos", "IdPedidoSservicoNavigation")
                        .WithMany("PedidoServico")
                        .HasForeignKey("IdPedidoSservico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FKPedidoSservico");

                    b.Navigation("IdPedidoSfornecedorNavigation");

                    b.Navigation("IdPedidoSservicoNavigation");
                });

            modelBuilder.Entity("ERPSoft.DATA.Models.Saida", b =>
                {
                    b.HasOne("ERPSoft.DATA.Models.Fornecedor", "IdSaidaFornecedorNavigation")
                        .WithMany("Saida")
                        .HasForeignKey("IdSaidaFornecedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FKSaidaFornecedor");

                    b.HasOne("ERPSoft.DATA.Models.Produto", "IdSaidaProdutoNavigation")
                        .WithMany("Saida")
                        .HasForeignKey("IdSaidaProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FKSaidaProduto");

                    b.Navigation("IdSaidaFornecedorNavigation");

                    b.Navigation("IdSaidaProdutoNavigation");
                });

            modelBuilder.Entity("ERPSoft.DATA.Models.Servicos", b =>
                {
                    b.HasOne("ERPSoft.DATA.Models.Fornecedor", "IdFornecedorNavigation")
                        .WithMany("Servicos")
                        .HasForeignKey("IdFornecedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FKFornecedor");

                    b.Navigation("IdFornecedorNavigation");
                });

            modelBuilder.Entity("ERPSoft.DATA.Models.Fornecedor", b =>
                {
                    b.Navigation("Entrada");

                    b.Navigation("OrdemCompra");

                    b.Navigation("OrdemServico");

                    b.Navigation("PedidoServico");

                    b.Navigation("Saida");

                    b.Navigation("Servicos");
                });

            modelBuilder.Entity("ERPSoft.DATA.Models.PedidoMaterial", b =>
                {
                    b.Navigation("OrdemCompra");
                });

            modelBuilder.Entity("ERPSoft.DATA.Models.Produto", b =>
                {
                    b.Navigation("Entrada");

                    b.Navigation("PedidoMaterial");

                    b.Navigation("Saida");
                });

            modelBuilder.Entity("ERPSoft.DATA.Models.Servicos", b =>
                {
                    b.Navigation("OrdemServico");

                    b.Navigation("PedidoServico");
                });
#pragma warning restore 612, 618
        }
    }
}
